name: CI Pipeline (Test, Lint, Format, Coverage)

on: [push, pull_request]

# Set default permissions for the GITHUB_TOKEN.
permissions:
  contents: read
  checks: write
  pull-requests: write

# Use uv, a much faster package installer
env:
  UV_SYSTEM_PYTHON: true

jobs:
  # Job to run linting and formatting checks.
  checks:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install uv
        run: curl -LsSf https://astral.sh/uv/install.sh | sh

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip # uv uses the same cache directory as pip
          key: ${{ runner.os }}-uv-${{ hashFiles('**/pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-uv-

      - name: Install dependencies with uv
        run: uv pip install -e '.[dev]'

      - name: Run Ruff Linter
        run: ruff check src tests

      - name: Run Ruff Formatter Check
        run: ruff format --check src tests

  # Job to run tests across multiple Python versions and report coverage
  test-and-coverage:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        # Test on a matrix of Python versions for broader compatibility
        python-version: ["3.9", "3.10", "3.11", "3.12"]

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install uv
        run: curl -LsSf https://astral.sh/uv/install.sh | sh

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip # uv uses the same cache directory as pip
          key: ${{ runner.os }}-uv-${{ hashFiles('**/pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-uv-

      # Install main dependencies, plus 'coveralls' only on the 3.12 job
      - name: Install dependencies with uv
        run: |
          uv pip install -e '.[dev]'
          if [[ "${{ matrix.python-version }}" == "3.12" ]]; then
            uv pip install coveralls
          fi

      # Run tests on all versions. On 3.12, also generate the coverage report.
      - name: Run tests with pytest
        run: |
          if [[ "${{ matrix.python-version }}" == "3.12" ]]; then
            pytest --cov=src/desi/processor --junitxml=pytest.xml | tee pytest-coverage.txt
          else
            pytest
          fi

      # The following steps now ONLY run on the Python 3.12 job
      - name: Post pytest coverage comment on PR
        if: matrix.python-version == '3.12'
        uses: MishaKav/pytest-coverage-comment@main
        with:
          pytest-coverage-path: ./pytest-coverage.txt
          junitxml-path: ./pytest.xml

      - name: Submit coverage report to Coveralls
        if: matrix.python-version == '3.12'
        # This is the simple, direct upload method from your old working file.
        # NO parallel logic.
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          coveralls --service=github